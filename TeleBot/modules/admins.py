from TeleBot import app, BOT_ID
from TeleBot.core.custom_filter import command
from pyrogram import filters, errors
from TeleBot.core.decorators.lang import language
from TeleBot.core.extractions import extract_user_id
from TeleBot.core.functions import get_admins
from TeleBot.core.chat_status import do_admins_stuff
from pyrogram.types import (
    InlineKeyboardButton , 
    InlineKeyboardMarkup , 
    ChatPrivileges 
    )

async def get_chat_privileges(client,message,status):
    chat_id = message.chat.id
    bot = (await client.get_chat_member(chat_id,BOT_ID)).privileges
    PROMOTE_DICT = {
        "normal" : ChatPrivileges(
            can_change_info=bot.can_change_info,
            can_invite_users=bot.can_invite_users,
            can_delete_messages=bot.can_delete_messages,
            can_restrict_members=bot.can_restrict_members,
            can_pin_messages=bot.can_pin_messages,
            can_manage_chat=bot.can_manage_chat,
            can_promote_members = False,
            can_manage_video_chats=bot.can_manage_video_chats ),
        "full" :  ChatPrivileges(
            can_change_info=bot.can_change_info,
            can_invite_users=bot.can_invite_users,
            can_delete_messages=bot.can_delete_messages,
            can_restrict_members=bot.can_restrict_members,
            can_pin_messages=bot.can_pin_messages,
            can_promote_members=bot.can_promote_members,
            can_manage_chat=bot.can_manage_chat,
            can_manage_video_chats=bot.can_manage_video_chats),
        "mid" : ChatPrivileges(
            can_change_info=False,
            can_invite_users=bot.can_invite_users,
            can_delete_messages=False,
            can_restrict_members=bot.can_restrict_members,
            can_pin_messages=False,
            can_promote_members=False,
            can_manage_chat=bot.can_manage_chat,
            can_manage_video_chats=bot.can_manage_video_chats),
        "low" :  ChatPrivileges(),
    }
    return PROMOTE_DICT[status]


@app.on_message(command(commands="promote"))
@language
async def _promote(client,message, lang):
    x , chat_id = await do_admins_stuff(message,lang, permission= "can_promote_members" , check_bot= True)
    print(x,chat_id)
    if x is False:
        return
    user_id = await extract_user_id(message)
    chat_id = message.chat.id
    from_user_id = message.sender_chat.id if message.sender_chat else message.from_user.id
    if user_id is None:
        return await message.reply("I ·¥Ö·¥è…¥'·¥õ ·¥ã…¥·¥è·¥° ·¥° ú·¥è  è·¥è·¥ú' Ä·¥á ·¥õ·¥Ä ü·¥ã…™…¥…¢ ·¥Ä ô·¥è·¥ú·¥õ,  è·¥è·¥ú' Ä·¥á …¢·¥è…™…¥…¢ ·¥õ·¥è …¥·¥á·¥á·¥Ö ·¥õ·¥è s·¥ò·¥á·¥Ñ…™“ì è ·¥Ä ·¥ús·¥á Ä...!")
    if user_id == BOT_ID:
        return await message.reply(" ô Ä·¥ú ú  ú·¥è·¥° ·¥Ñ·¥Ä…¥ …™ ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á ·¥ç ès·¥á ü“ì.")
    if user_id in await get_admins(chat_id):
        return await message.reply(" ú·¥è·¥° ·¥Ä·¥ç …™ ·¥ç·¥á·¥Ä…¥·¥õ ·¥õ·¥è ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á Íú±·¥è·¥ç·¥á·¥è…¥·¥á ·¥õ ú·¥Ä·¥õ'Íú± ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥?")
    await message.reply_text("·¥Ñ ú·¥è·¥èÍú±·¥á ·¥Ä·¥õ ·¥° ú·¥Ä·¥õ ·¥ò·¥èÍú±…™·¥õ…™·¥è…¥  è·¥è·¥ú ·¥°·¥Ä…¥…¥·¥Ä ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á ·¥õ ú·¥á ·¥úÍú±·¥á Ä !",reply_markup= InlineKeyboardMarkup([[InlineKeyboardButton("…¥·¥è Ä·¥ç·¥Ä ü ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á",callback_data =f"promote_normal_{user_id}_{from_user_id}"),InlineKeyboardButton("Íú∞·¥ú ü ü ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á",callback_data = f"promote_full_{user_id}_{from_user_id}")],
                                                                                                                       [InlineKeyboardButton("·¥ç…™·¥Ö ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á",callback_data =f"promote_mid_{user_id}_{from_user_id}"),InlineKeyboardButton(" ü·¥è·¥° ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á",callback_data = f"promote_low_{user_id}_{from_user_id}")],
                                                                                                                       [InlineKeyboardButton("·¥Ñ ü·¥èÍú±·¥á",callback_data =f"admin_close_{from_user_id}")]
                                                                                                                    ]))




@app.on_callback_query(filters.regex('^promote_'))
async def _promotecb(client, query):
    status,user_id,from_user_id = query.data.split('_')[1:]
    user_id = int(user_id)
    from_user_id = int(from_user_id)
    chat = query.message.chat
    from_user = query.from_user 
    user = await client.get_chat_member(chat.id,user_id)
    if from_user.id != from_user_id:
        await query.answer(" è·¥è·¥ú ·¥Ñ·¥Ä…¥'·¥õ ·¥ò·¥á ÄÍú∞ Ä·¥è·¥ç ·¥õ ú…™Íú± ·¥Ä·¥Ñ·¥õ…™·¥è…¥ üî¥.",show_alert=True)
        return
    await query.message.delete()
    for statuss in ["normal","full","low","mid"] :
        if statuss == status :
            chat_rights = await get_chat_privileges(client,query.message,status)
            try:
                await client.promote_chat_member(chat.id,user_id,chat_rights)
              
            except errors.BadRequest as err: 
                if err.MESSAGE == "USER_NOT_PARTICIPANT":
                   await query.message.reply("…™ ·¥Ñ·¥Ä…¥'·¥õ ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á Íú±·¥è·¥ç·¥á·¥è…¥·¥á ·¥° ú·¥è …™Íú±…¥'·¥õ …™…¥ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò.")
                   return 
            await client.send_message(chat.id,f"Íú±·¥ú·¥Ñ·¥áÍú±Íú±Íú∞·¥ú ü ü è ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á·¥Ö {user.user.mention} …™…¥ {chat.title} ·¥°…™·¥õ ú `{status}`  Ä…™…¢ ú·¥õÍú±.",
                                             reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(text="‚Äã·¥Ö·¥á·¥ç·¥è·¥õ·¥á‚Äã",callback_data=f"demote_{user_id}_{from_user_id}")],                                                                 
                                                                                [InlineKeyboardButton("·¥Ñ ü·¥èÍú±·¥á",callback_data =f"admin_close_{from_user_id}")]]))
    return f"#PROMOTED\n\n¬ª **·¥úÍú±·¥á Ä**: {user.user.mention}\n¬ª **·¥Ä·¥Ö·¥ç…™…¥**: {from_user.mention}"
   